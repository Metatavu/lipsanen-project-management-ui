/* tslint:disable */
/* eslint-disable */
/**
 * Lipsanen Project Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaskConnectionType } from './TaskConnectionType';
import {
    TaskConnectionTypeFromJSON,
    TaskConnectionTypeFromJSONTyped,
    TaskConnectionTypeToJSON,
} from './TaskConnectionType';

/**
 * Task connection
 * @export
 * @interface TaskConnection
 */
export interface TaskConnection {
    /**
     * 
     * @type {string}
     * @memberof TaskConnection
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskConnection
     */
    sourceTaskId: string;
    /**
     * 
     * @type {string}
     * @memberof TaskConnection
     */
    targetTaskId: string;
    /**
     * 
     * @type {TaskConnectionType}
     * @memberof TaskConnection
     */
    type: TaskConnectionType;
}

/**
 * Check if a given object implements the TaskConnection interface.
 */
export function instanceOfTaskConnection(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sourceTaskId" in value;
    isInstance = isInstance && "targetTaskId" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function TaskConnectionFromJSON(json: any): TaskConnection {
    return TaskConnectionFromJSONTyped(json, false);
}

export function TaskConnectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskConnection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'sourceTaskId': json['sourceTaskId'],
        'targetTaskId': json['targetTaskId'],
        'type': TaskConnectionTypeFromJSON(json['type']),
    };
}

export function TaskConnectionToJSON(value?: TaskConnection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sourceTaskId': value.sourceTaskId,
        'targetTaskId': value.targetTaskId,
        'type': TaskConnectionTypeToJSON(value.type),
    };
}

