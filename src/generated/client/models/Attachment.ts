/* tslint:disable */
/* eslint-disable */
/**
 * Lipsanen Project Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Metadata } from './Metadata';
import {
    MetadataFromJSON,
    MetadataFromJSONTyped,
    MetadataToJSON,
} from './Metadata';

/**
 * Attachment object
 * @export
 * @interface Attachment
 */
export interface Attachment {
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    projectId: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    taskId?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    url: string;
    /**
     * Type of the attachment
     * @type {string}
     * @memberof Attachment
     */
    type: string;
    /**
     * 
     * @type {Metadata}
     * @memberof Attachment
     */
    metadata?: Metadata;
}

/**
 * Check if a given object implements the Attachment interface.
 */
export function instanceOfAttachment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "projectId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function AttachmentFromJSON(json: any): Attachment {
    return AttachmentFromJSONTyped(json, false);
}

export function AttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Attachment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'projectId': json['projectId'],
        'taskId': !exists(json, 'taskId') ? undefined : json['taskId'],
        'name': json['name'],
        'url': json['url'],
        'type': json['type'],
        'metadata': !exists(json, 'metadata') ? undefined : MetadataFromJSON(json['metadata']),
    };
}

export function AttachmentToJSON(value?: Attachment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'projectId': value.projectId,
        'taskId': value.taskId,
        'name': value.name,
        'url': value.url,
        'type': value.type,
        'metadata': MetadataToJSON(value.metadata),
    };
}

